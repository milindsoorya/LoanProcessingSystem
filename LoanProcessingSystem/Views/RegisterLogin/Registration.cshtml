@model LoanProcessingSystem.Models.UserRegister

@{
    ViewBag.Title = "Registration";
}

<h2 style="color:#ec8b00;font-size:45px;margin-top:80px;text-align:center;"> Registeration </h2>
<div class="roundcard" style=" height:auto; width:1200px;padding:30px; border-radius:10px;margin-bottom:20px; margin-left:30px;margin-top:10px; box-shadow: 0px 7px 40px #efefef;">
    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong>@ViewBag.Message
            </div>
            @Html
        }

    }
    else
    {

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" style="margin-left:30%;margin-right:25%;">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        Male
                        @Html.RadioButtonFor(model => model.Gender, "Male")
                        Female
                        @Html.RadioButtonFor(model => model.Gender, "Female")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Register" class="btn btn-default" style="background-color:#ec8b00;color:#fff;" />
                    </div>
                </div>
            </div>
            <div style="text-align:center;">
                <p>Already have an account?   <a>@Html.ActionLink("LogIn", "LogIn")</a></p>

            </div>
            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong>@ViewBag.Message
                </div>
            }
        }
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
